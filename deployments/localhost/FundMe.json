{
  "address": "0x71C95911E9a5D330f4D621842EC243EE1343292e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9bacf46d44d4fefa1ab754172ce7f393bf2bf421a2e14553e237bd75f83cf9df",
  "receipt": {
    "to": null,
    "from": "0x70997970C51812dc3A010C7d01b50e0d17dc79C8",
    "contractAddress": "0x71C95911E9a5D330f4D621842EC243EE1343292e",
    "transactionIndex": 0,
    "gasUsed": "876053",
    "logsBloom": "0x
    "blockHash": "0x07ba4603c2f1588ac56363a221a93ac888fb6940716ea1f589e91cb6c00f7f64",
    "transactionHash": "0x9bacf46d44d4fefa1ab754172ce7f393bf2bf421a2e14553e237bd75f83cf9df",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "876053",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8464135c8F25Da09e49BC8782676a84730C318bC"
  ],
  "numDeployments": 1,
  "solcInputHash": "49bb67a06fe7a7d9e995d5ecae628aa5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n//Import the library\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256 public minimumUsd = 20 * 1e18; // We need to calculate this before funding otherwise it will error    //50/3000 = 0.016666666666 So 0.02eth should be enough to fund the contract.\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    //To make sure only the admin/owner withdraws. For that we want to make it such that whomever deploys the contract, owns the contract.\\n    //We can do this using a constructor, which initializes when deployed.\\n    address public owner; //A declared variable\\n\\n    AggregatorV3Interface public priceFeed; //Assign an address to this type.\\n\\n    constructor(address priceFeedAddr) {\\n        owner = msg.sender; //Calling this inside the constructor ensures, whomever deploys it is name owner and should be able to call the withdraw function.\\n        priceFeed = AggregatorV3Interface(priceFeedAddr);\\n\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= minimumUsd,\\n            \\\"Amount is not enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        //Now the function includes a modifier\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed.\\\");\\n    }\\n\\n    //Creating a modifier\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"You are not the owner!\\\");\\n        _; // This is required to make a modifier. This means if the above is true, continue with the rest of the code.\\n        //If the _; came first, it would execute the function and then check the require.\\n    }\\n}\\n\",\"keccak256\":\"0x49ee9ebf85335fa1920f1baae78d8817a2f5ba9d92e8a97aa0745b648715921d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 1e10); // This will be the value of ETH to USD and exponentially raise to 10 to remove any decimal places.\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethAmount * ethPrice) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\\n/*\\n    Adding the chainlink/contracts to manage the data feed - yarn add --dev @chainlink/contracts\\n    In the latest version of chainlink/contracts - Aggregator has been moved to shared.\\n\\n    Because we are initializing the Aggregator address, we don't need to hard code it.\\n*/\",\"keccak256\":\"0xbefbb3921e344f89c8e0431bf1123c260fce2ffb0e338ea1eaa0f37a6a3fb864\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526801158e460913d0000060005534801561001d57600080fd5b50604051610f0b380380610f0b833981810160405281019061003f919061012a565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610157565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f7826100cc565b9050919050565b610107816100ec565b811461011257600080fd5b50565b600081519050610124816100fe565b92915050565b6000602082840312156101405761013f6100c7565b5b600061014e84828501610115565b91505092915050565b610da5806101666000396000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b60d42881461014a578063dc0d3dff1461015457610070565b8063098de820146100755780633ccfd60b146100a05780633e47d6f3146100b7575b600080fd5b34801561008157600080fd5b5061008a610191565b6040516100979190610735565b60405180910390f35b3480156100ac57600080fd5b506100b5610197565b005b3480156100c357600080fd5b506100de60048036038101906100d991906107b3565b6103e3565b6040516100eb9190610735565b60405180910390f35b34801561010057600080fd5b506101096103fb565b604051610116919061083f565b60405180910390f35b34801561012b57600080fd5b50610134610421565b6040516101419190610869565b60405180910390f35b610152610447565b005b34801561016057600080fd5b5061017b600480360381019061017691906108b0565b610569565b6040516101889190610869565b60405180910390f35b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e9061093a565b60405180910390fd5b60005b6001805490508110156102d35760006001828154811061024d5761024c61095a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102cb906109b8565b91505061022a565b50600067ffffffffffffffff8111156102ef576102ee610a00565b5b60405190808252806020026020018201604052801561031d5781602001602082028036833780820191505090505b5060019080519060200190610333929190610675565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035a90610a60565b60006040518083038185875af1925050503d8060008114610397576040519150601f19603f3d011682016040523d82523d6000602084013e61039c565b606091505b50509050806103e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d790610ac1565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005461047f600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105a890919063ffffffff16565b10156104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b790610b2d565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6001818154811061057957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105b4836105e4565b90506000670de0b6b3a764000082866105cd9190610b4d565b6105d79190610bbe565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610c7c565b5050509150506402540be4008161066d9190610cf7565b915050919050565b8280548282559060005260206000209081019282156106ee579160200282015b828111156106ed5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610695565b5b5090506106fb91906106ff565b5090565b5b80821115610718576000816000905550600101610700565b5090565b6000819050919050565b61072f8161071c565b82525050565b600060208201905061074a6000830184610726565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078082610755565b9050919050565b61079081610775565b811461079b57600080fd5b50565b6000813590506107ad81610787565b92915050565b6000602082840312156107c9576107c8610750565b5b60006107d78482850161079e565b91505092915050565b6000819050919050565b60006108056108006107fb84610755565b6107e0565b610755565b9050919050565b6000610817826107ea565b9050919050565b60006108298261080c565b9050919050565b6108398161081e565b82525050565b60006020820190506108546000830184610830565b92915050565b61086381610775565b82525050565b600060208201905061087e600083018461085a565b92915050565b61088d8161071c565b811461089857600080fd5b50565b6000813590506108aa81610884565b92915050565b6000602082840312156108c6576108c5610750565b5b60006108d48482850161089b565b91505092915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e65722100000000000000000000600082015250565b60006109246016836108dd565b915061092f826108ee565b602082019050919050565b6000602082019050818103600083015261095381610917565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c38261071c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109f5576109f4610989565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a4a600083610a2f565b9150610a5582610a3a565b600082019050919050565b6000610a6b82610a3d565b9150819050919050565b7f43616c6c206661696c65642e0000000000000000000000000000000000000000600082015250565b6000610aab600c836108dd565b9150610ab682610a75565b602082019050919050565b60006020820190508181036000830152610ada81610a9e565b9050919050565b7f416d6f756e74206973206e6f7420656e6f756768000000000000000000000000600082015250565b6000610b176014836108dd565b9150610b2282610ae1565b602082019050919050565b60006020820190508181036000830152610b4681610b0a565b9050919050565b6000610b588261071c565b9150610b638361071c565b9250828202610b718161071c565b91508282048414831517610b8857610b87610989565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bc98261071c565b9150610bd48361071c565b925082610be457610be3610b8f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0e81610bef565b8114610c1957600080fd5b50565b600081519050610c2b81610c05565b92915050565b6000819050919050565b610c4481610c31565b8114610c4f57600080fd5b50565b600081519050610c6181610c3b565b92915050565b600081519050610c7681610884565b92915050565b600080600080600060a08688031215610c9857610c97610750565b5b6000610ca688828901610c1c565b9550506020610cb788828901610c52565b9450506040610cc888828901610c67565b9350506060610cd988828901610c67565b9250506080610cea88828901610c1c565b9150509295509295909350565b6000610d0282610c31565b9150610d0d83610c31565b9250828202610d1b81610c31565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d5357610d52610989565b5b8282058414831517610d6857610d67610989565b5b509291505056fea264697066735822122045df67693321588bb5a0d7160b3b27453c00d81c401e83bca96d2d9102e5e96064736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b60d42881461014a578063dc0d3dff1461015457610070565b8063098de820146100755780633ccfd60b146100a05780633e47d6f3146100b7575b600080fd5b34801561008157600080fd5b5061008a610191565b6040516100979190610735565b60405180910390f35b3480156100ac57600080fd5b506100b5610197565b005b3480156100c357600080fd5b506100de60048036038101906100d991906107b3565b6103e3565b6040516100eb9190610735565b60405180910390f35b34801561010057600080fd5b506101096103fb565b604051610116919061083f565b60405180910390f35b34801561012b57600080fd5b50610134610421565b6040516101419190610869565b60405180910390f35b610152610447565b005b34801561016057600080fd5b5061017b600480360381019061017691906108b0565b610569565b6040516101889190610869565b60405180910390f35b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e9061093a565b60405180910390fd5b60005b6001805490508110156102d35760006001828154811061024d5761024c61095a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102cb906109b8565b91505061022a565b50600067ffffffffffffffff8111156102ef576102ee610a00565b5b60405190808252806020026020018201604052801561031d5781602001602082028036833780820191505090505b5060019080519060200190610333929190610675565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035a90610a60565b60006040518083038185875af1925050503d8060008114610397576040519150601f19603f3d011682016040523d82523d6000602084013e61039c565b606091505b50509050806103e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d790610ac1565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005461047f600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105a890919063ffffffff16565b10156104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b790610b2d565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6001818154811061057957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105b4836105e4565b90506000670de0b6b3a764000082866105cd9190610b4d565b6105d79190610bbe565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610c7c565b5050509150506402540be4008161066d9190610cf7565b915050919050565b8280548282559060005260206000209081019282156106ee579160200282015b828111156106ed5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610695565b5b5090506106fb91906106ff565b5090565b5b80821115610718576000816000905550600101610700565b5090565b6000819050919050565b61072f8161071c565b82525050565b600060208201905061074a6000830184610726565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078082610755565b9050919050565b61079081610775565b811461079b57600080fd5b50565b6000813590506107ad81610787565b92915050565b6000602082840312156107c9576107c8610750565b5b60006107d78482850161079e565b91505092915050565b6000819050919050565b60006108056108006107fb84610755565b6107e0565b610755565b9050919050565b6000610817826107ea565b9050919050565b60006108298261080c565b9050919050565b6108398161081e565b82525050565b60006020820190506108546000830184610830565b92915050565b61086381610775565b82525050565b600060208201905061087e600083018461085a565b92915050565b61088d8161071c565b811461089857600080fd5b50565b6000813590506108aa81610884565b92915050565b6000602082840312156108c6576108c5610750565b5b60006108d48482850161089b565b91505092915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e65722100000000000000000000600082015250565b60006109246016836108dd565b915061092f826108ee565b602082019050919050565b6000602082019050818103600083015261095381610917565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c38261071c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109f5576109f4610989565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a4a600083610a2f565b9150610a5582610a3a565b600082019050919050565b6000610a6b82610a3d565b9150819050919050565b7f43616c6c206661696c65642e0000000000000000000000000000000000000000600082015250565b6000610aab600c836108dd565b9150610ab682610a75565b602082019050919050565b60006020820190508181036000830152610ada81610a9e565b9050919050565b7f416d6f756e74206973206e6f7420656e6f756768000000000000000000000000600082015250565b6000610b176014836108dd565b9150610b2282610ae1565b602082019050919050565b60006020820190508181036000830152610b4681610b0a565b9050919050565b6000610b588261071c565b9150610b638361071c565b9250828202610b718161071c565b91508282048414831517610b8857610b87610989565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bc98261071c565b9150610bd48361071c565b925082610be457610be3610b8f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0e81610bef565b8114610c1957600080fd5b50565b600081519050610c2b81610c05565b92915050565b6000819050919050565b610c4481610c31565b8114610c4f57600080fd5b50565b600081519050610c6181610c3b565b92915050565b600081519050610c7681610884565b92915050565b600080600080600060a08688031215610c9857610c97610750565b5b6000610ca688828901610c1c565b9550506020610cb788828901610c52565b9450506040610cc888828901610c67565b9350506060610cd988828901610c67565b9250506080610cea88828901610c1c565b9150509295509295909350565b6000610d0282610c31565b9150610d0d83610c31565b9250828202610d1b81610c31565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d5357610d52610989565b5b8282058414831517610d6857610d67610989565b5b509291505056fea264697066735822122045df67693321588bb5a0d7160b3b27453c00d81c401e83bca96d2d9102e5e96064736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minimumUsd",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}